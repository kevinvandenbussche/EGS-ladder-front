{"ast":null,"code":"import * as meta from './meta.js';\nimport { unescape } from './utils.js';\nconst PREFIX_RE = /^(0|[1-9][0-9]*?)([#]?)$/;\nconst INDEX_RE = /-|0|[1-9][0-9]*/;\nexport function getPointer(obj) {\n  const p = [];\n  let parent,\n    current = obj;\n  while (parent = meta.getMeta(current).parent) {\n    const frag = meta.getKey(current);\n    if (!frag) {\n      throw new Error(`Failed to get key for ${JSON.stringify(current)}`);\n    } else {\n      p.push('' + frag);\n      current = parent;\n    }\n  }\n  return [''].concat(p.reverse()).join('/');\n}\nexport function resolve(obj, path) {\n  if (typeof obj === 'undefined') {\n    throw new TypeError('Bad object');\n  } else if (typeof path !== 'string') {\n    throw new TypeError('Bad path');\n  } else if (!path) {\n    return obj;\n  }\n  let current = obj;\n  const parts = path.split('/');\n  const prefix = parts.shift();\n  if (prefix) {\n    if (prefix.match(meta.LII_RE)) {\n      current = meta.getById(current, `#${prefix}`);\n    } else {\n      const match = prefix.match(PREFIX_RE);\n      if (!match) {\n        throw new SyntaxError(`Bad prefix ${prefix}`);\n      } else {\n        let levels = parseInt(match[1]);\n        while (levels--) {\n          current = meta.getMeta(current).parent;\n          if (!current) {\n            throw new RangeError(`Invalid prefix \"${match[1]}\"`);\n          }\n        }\n        if (match[2]) {\n          return meta.getKey(current);\n        }\n      }\n    }\n  }\n  while (parts.length) {\n    if (current === null || typeof current !== 'object') {\n      throw new TypeError(`Invalid type at path`);\n    }\n    const part = unescape(parts.shift());\n    if (Array.isArray(current)) {\n      if (!part.match(INDEX_RE)) {\n        throw new SyntaxError(`Invalid array index \"${part}\"`);\n      } else if (part === '-') {\n        throw new RangeError(`Index out of bounds \"${part}\"`);\n      } else {\n        const index = parseInt(part);\n        if (index > current.length) {\n          throw new RangeError(`Index out of bounds \"${part}\"`);\n        } else {\n          current = current[index];\n        }\n      }\n    } else {\n      current = current[part];\n      if (typeof current === 'undefined') {\n        throw new RangeError(`Cannot find property \"${part}\"`);\n      }\n    }\n  }\n  return current;\n}","map":{"version":3,"names":["meta","unescape","PREFIX_RE","INDEX_RE","getPointer","obj","p","parent","current","getMeta","frag","getKey","Error","JSON","stringify","push","concat","reverse","join","resolve","path","TypeError","parts","split","prefix","shift","match","LII_RE","getById","SyntaxError","levels","parseInt","RangeError","length","part","Array","isArray","index"],"sources":["C:/Users/kevin/Desktop/EGS data/Egs-Ladder-Front/EGS-ladder-front/node_modules/jsonref/dist/pointer.js"],"sourcesContent":["import * as meta from './meta.js';\nimport { unescape } from './utils.js';\nconst PREFIX_RE = /^(0|[1-9][0-9]*?)([#]?)$/;\nconst INDEX_RE = /-|0|[1-9][0-9]*/;\nexport function getPointer(obj) {\n    const p = [];\n    let parent, current = obj;\n    while ((parent = meta.getMeta(current).parent)) {\n        const frag = meta.getKey(current);\n        if (!frag) {\n            throw new Error(`Failed to get key for ${JSON.stringify(current)}`);\n        }\n        else {\n            p.push('' + frag);\n            current = parent;\n        }\n    }\n    return [''].concat(p.reverse()).join('/');\n}\nexport function resolve(obj, path) {\n    if (typeof obj === 'undefined') {\n        throw new TypeError('Bad object');\n    }\n    else if (typeof path !== 'string') {\n        throw new TypeError('Bad path');\n    }\n    else if (!path) {\n        return obj;\n    }\n    let current = obj;\n    const parts = path.split('/');\n    const prefix = parts.shift();\n    if (prefix) {\n        if (prefix.match(meta.LII_RE)) {\n            current = meta.getById(current, `#${prefix}`);\n        }\n        else {\n            const match = prefix.match(PREFIX_RE);\n            if (!match) {\n                throw new SyntaxError(`Bad prefix ${prefix}`);\n            }\n            else {\n                let levels = parseInt(match[1]);\n                while (levels--) {\n                    current = meta.getMeta(current).parent;\n                    if (!current) {\n                        throw new RangeError(`Invalid prefix \"${match[1]}\"`);\n                    }\n                }\n                if (match[2]) {\n                    return meta.getKey(current);\n                }\n            }\n        }\n    }\n    while (parts.length) {\n        if (current === null || typeof current !== 'object') {\n            throw new TypeError(`Invalid type at path`);\n        }\n        const part = unescape(parts.shift());\n        if (Array.isArray(current)) {\n            if (!part.match(INDEX_RE)) {\n                throw new SyntaxError(`Invalid array index \"${part}\"`);\n            }\n            else if (part === '-') {\n                throw new RangeError(`Index out of bounds \"${part}\"`);\n            }\n            else {\n                const index = parseInt(part);\n                if (index > current.length) {\n                    throw new RangeError(`Index out of bounds \"${part}\"`);\n                }\n                else {\n                    current = current[index];\n                }\n            }\n        }\n        else {\n            current = current[part];\n            if (typeof current === 'undefined') {\n                throw new RangeError(`Cannot find property \"${part}\"`);\n            }\n        }\n    }\n    return current;\n}\n//# sourceMappingURL=pointer.js.map"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,WAAW;AACjC,SAASC,QAAQ,QAAQ,YAAY;AACrC,MAAMC,SAAS,GAAG,0BAA0B;AAC5C,MAAMC,QAAQ,GAAG,iBAAiB;AAClC,OAAO,SAASC,UAAU,CAACC,GAAG,EAAE;EAC5B,MAAMC,CAAC,GAAG,EAAE;EACZ,IAAIC,MAAM;IAAEC,OAAO,GAAGH,GAAG;EACzB,OAAQE,MAAM,GAAGP,IAAI,CAACS,OAAO,CAACD,OAAO,CAAC,CAACD,MAAM,EAAG;IAC5C,MAAMG,IAAI,GAAGV,IAAI,CAACW,MAAM,CAACH,OAAO,CAAC;IACjC,IAAI,CAACE,IAAI,EAAE;MACP,MAAM,IAAIE,KAAK,CAAE,yBAAwBC,IAAI,CAACC,SAAS,CAACN,OAAO,CAAE,EAAC,CAAC;IACvE,CAAC,MACI;MACDF,CAAC,CAACS,IAAI,CAAC,EAAE,GAAGL,IAAI,CAAC;MACjBF,OAAO,GAAGD,MAAM;IACpB;EACJ;EACA,OAAO,CAAC,EAAE,CAAC,CAACS,MAAM,CAACV,CAAC,CAACW,OAAO,EAAE,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAC7C;AACA,OAAO,SAASC,OAAO,CAACd,GAAG,EAAEe,IAAI,EAAE;EAC/B,IAAI,OAAOf,GAAG,KAAK,WAAW,EAAE;IAC5B,MAAM,IAAIgB,SAAS,CAAC,YAAY,CAAC;EACrC,CAAC,MACI,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;IAC/B,MAAM,IAAIC,SAAS,CAAC,UAAU,CAAC;EACnC,CAAC,MACI,IAAI,CAACD,IAAI,EAAE;IACZ,OAAOf,GAAG;EACd;EACA,IAAIG,OAAO,GAAGH,GAAG;EACjB,MAAMiB,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;EAC7B,MAAMC,MAAM,GAAGF,KAAK,CAACG,KAAK,EAAE;EAC5B,IAAID,MAAM,EAAE;IACR,IAAIA,MAAM,CAACE,KAAK,CAAC1B,IAAI,CAAC2B,MAAM,CAAC,EAAE;MAC3BnB,OAAO,GAAGR,IAAI,CAAC4B,OAAO,CAACpB,OAAO,EAAG,IAAGgB,MAAO,EAAC,CAAC;IACjD,CAAC,MACI;MACD,MAAME,KAAK,GAAGF,MAAM,CAACE,KAAK,CAACxB,SAAS,CAAC;MACrC,IAAI,CAACwB,KAAK,EAAE;QACR,MAAM,IAAIG,WAAW,CAAE,cAAaL,MAAO,EAAC,CAAC;MACjD,CAAC,MACI;QACD,IAAIM,MAAM,GAAGC,QAAQ,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/B,OAAOI,MAAM,EAAE,EAAE;UACbtB,OAAO,GAAGR,IAAI,CAACS,OAAO,CAACD,OAAO,CAAC,CAACD,MAAM;UACtC,IAAI,CAACC,OAAO,EAAE;YACV,MAAM,IAAIwB,UAAU,CAAE,mBAAkBN,KAAK,CAAC,CAAC,CAAE,GAAE,CAAC;UACxD;QACJ;QACA,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACV,OAAO1B,IAAI,CAACW,MAAM,CAACH,OAAO,CAAC;QAC/B;MACJ;IACJ;EACJ;EACA,OAAOc,KAAK,CAACW,MAAM,EAAE;IACjB,IAAIzB,OAAO,KAAK,IAAI,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MACjD,MAAM,IAAIa,SAAS,CAAE,sBAAqB,CAAC;IAC/C;IACA,MAAMa,IAAI,GAAGjC,QAAQ,CAACqB,KAAK,CAACG,KAAK,EAAE,CAAC;IACpC,IAAIU,KAAK,CAACC,OAAO,CAAC5B,OAAO,CAAC,EAAE;MACxB,IAAI,CAAC0B,IAAI,CAACR,KAAK,CAACvB,QAAQ,CAAC,EAAE;QACvB,MAAM,IAAI0B,WAAW,CAAE,wBAAuBK,IAAK,GAAE,CAAC;MAC1D,CAAC,MACI,IAAIA,IAAI,KAAK,GAAG,EAAE;QACnB,MAAM,IAAIF,UAAU,CAAE,wBAAuBE,IAAK,GAAE,CAAC;MACzD,CAAC,MACI;QACD,MAAMG,KAAK,GAAGN,QAAQ,CAACG,IAAI,CAAC;QAC5B,IAAIG,KAAK,GAAG7B,OAAO,CAACyB,MAAM,EAAE;UACxB,MAAM,IAAID,UAAU,CAAE,wBAAuBE,IAAK,GAAE,CAAC;QACzD,CAAC,MACI;UACD1B,OAAO,GAAGA,OAAO,CAAC6B,KAAK,CAAC;QAC5B;MACJ;IACJ,CAAC,MACI;MACD7B,OAAO,GAAGA,OAAO,CAAC0B,IAAI,CAAC;MACvB,IAAI,OAAO1B,OAAO,KAAK,WAAW,EAAE;QAChC,MAAM,IAAIwB,UAAU,CAAE,yBAAwBE,IAAK,GAAE,CAAC;MAC1D;IACJ;EACJ;EACA,OAAO1B,OAAO;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
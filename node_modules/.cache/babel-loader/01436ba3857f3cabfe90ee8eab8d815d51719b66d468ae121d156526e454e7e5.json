{"ast":null,"code":"const getResources = paths => Array.from(new Set(Object.keys(paths).filter(path => {\n  return new RegExp(\"^[^{}]+/{[^{}]+}/?$\").test(path);\n})));\nexport default getResources;","map":{"version":3,"mappings":"AAEA,MAAMA,YAAY,GAChBC,KAAoD,IAEpDC,KAAK,CAACC,IAAI,CACR,IAAIC,GAAG,CACLC,MAAM,CAACC,IAAI,CAACL,KAAK,CAAC,CAACM,MAAM,CAAEC,IAAI,IAAI;EACjC,OAAO,IAAIC,MAAM,CAAC,qBAAqB,CAAC,CAACC,IAAI,CAACF,IAAI,CAAC;AACrD,CAAC,CAAC,CACH,CACF;AAEH,eAAeR,YAAY","names":["getResources","paths","Array","from","Set","Object","keys","filter","path","RegExp","test"],"sources":["C:\\Users\\kevin\\Desktop\\EGS data\\Egs-Ladder-Front\\EGS-ladder-front\\node_modules\\@api-platform\\api-doc-parser\\src\\utils\\getResources.ts"],"sourcesContent":["import type { OpenAPIV2, OpenAPIV3 } from \"openapi-types\";\n\nconst getResources = (\n  paths: OpenAPIV2.PathsObject | OpenAPIV3.PathsObject\n): string[] =>\n  Array.from(\n    new Set(\n      Object.keys(paths).filter((path) => {\n        return new RegExp(\"^[^{}]+/{[^{}]+}/?$\").test(path);\n      })\n    )\n  );\n\nexport default getResources;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
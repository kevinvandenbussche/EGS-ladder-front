{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport jsonld from \"jsonld\";\nimport get from \"lodash.get\";\nimport { Api } from \"../Api.js\";\nimport { Field } from \"../Field.js\";\nimport { Resource } from \"../Resource.js\";\nimport { Operation } from \"../Operation.js\";\nimport fetchJsonLd from \"./fetchJsonLd.js\";\nimport getParameters from \"./getParameters.js\";\nimport getType from \"./getType.js\";\n/**\n * Extracts the short name of a resource.\n */\nfunction guessNameFromUrl(url, entrypointUrl) {\n  return url.substr(entrypointUrl.length + 1);\n}\n/**\n * Finds the description of the class with the given id.\n */\nfunction findSupportedClass(docs, classToFind) {\n  const supportedClasses = get(docs, '[0][\"http://www.w3.org/ns/hydra/core#supportedClass\"]');\n  if (!Array.isArray(supportedClasses)) {\n    throw new Error('The API documentation has no \"http://www.w3.org/ns/hydra/core#supportedClass\" key or its value is not an array.');\n  }\n  for (const supportedClass of supportedClasses) {\n    if (supportedClass[\"@id\"] === classToFind) {\n      return supportedClass;\n    }\n  }\n  throw new Error(`The class \"${classToFind}\" is not defined in the API documentation.`);\n}\nexport function getDocumentationUrlFromHeaders(headers) {\n  const linkHeader = headers.get(\"Link\");\n  if (!linkHeader) {\n    throw new Error('The response has no \"Link\" HTTP header.');\n  }\n  const matches = /<(.+)>; rel=\"http:\\/\\/www.w3.org\\/ns\\/hydra\\/core#apiDocumentation\"/.exec(linkHeader);\n  if (matches === null) {\n    throw new Error('The \"Link\" HTTP header is not of the type \"http://www.w3.org/ns/hydra/core#apiDocumentation\".');\n  }\n  return matches[1];\n}\n/**\n * Retrieves Hydra's entrypoint and API docs.\n */\nfunction fetchEntrypointAndDocs(entrypointUrl) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return __awaiter(this, void 0, void 0, function* () {\n    const d = yield fetchJsonLd(entrypointUrl, options);\n    if (!(\"body\" in d)) {\n      throw new Error(\"An empty response was received for the entrypoint URL.\");\n    }\n    const entrypointJsonLd = d.body;\n    const docsUrl = getDocumentationUrlFromHeaders(d.response.headers);\n    const documentLoader = input => fetchJsonLd(input, options).then(response => {\n      if (!(\"body\" in response)) {\n        throw new Error(\"An empty response was received when expanding documentation or entrypoint JSON-LD documents.\");\n      }\n      return response;\n    });\n    const docsResponse = yield fetchJsonLd(docsUrl, options);\n    if (!(\"body\" in docsResponse)) {\n      throw new Error(\"An empty response was received for the documentation URL.\");\n    }\n    const docsJsonLd = docsResponse.body;\n    const [docs, entrypoint] = yield Promise.all([jsonld.expand(docsJsonLd, {\n      base: docsUrl,\n      documentLoader\n    }), jsonld.expand(entrypointJsonLd, {\n      base: entrypointUrl,\n      documentLoader\n    })]);\n    return {\n      entrypointUrl,\n      docsUrl,\n      entrypoint,\n      response: d.response,\n      docs\n    };\n  });\n}\nfunction removeTrailingSlash(url) {\n  if (url.endsWith(\"/\")) {\n    url = url.slice(0, -1);\n  }\n  return url;\n}\nfunction findRelatedClass(docs, property) {\n  // Use the entrypoint property's owl:equivalentClass if available\n  if (Array.isArray(property[\"http://www.w3.org/2000/01/rdf-schema#range\"])) {\n    for (const range of property[\"http://www.w3.org/2000/01/rdf-schema#range\"]) {\n      const onProperty = get(range, '[\"http://www.w3.org/2002/07/owl#equivalentClass\"][0][\"http://www.w3.org/2002/07/owl#onProperty\"][0][\"@id\"]');\n      const allValuesFrom = get(range, '[\"http://www.w3.org/2002/07/owl#equivalentClass\"][0][\"http://www.w3.org/2002/07/owl#allValuesFrom\"][0][\"@id\"]');\n      if (allValuesFrom && \"http://www.w3.org/ns/hydra/core#member\" === onProperty) {\n        return findSupportedClass(docs, allValuesFrom);\n      }\n    }\n  }\n  // As a fallback, find an operation available on the property of the entrypoint returning the searched type (usually POST)\n  for (const entrypointSupportedOperation of property[\"http://www.w3.org/ns/hydra/core#supportedOperation\"] || []) {\n    if (!entrypointSupportedOperation[\"http://www.w3.org/ns/hydra/core#returns\"]) {\n      continue;\n    }\n    const returns = get(entrypointSupportedOperation, '[\"http://www.w3.org/ns/hydra/core#returns\"][0][\"@id\"]');\n    if (\"string\" === typeof returns && 0 !== returns.indexOf(\"http://www.w3.org/ns/hydra/core\")) {\n      return findSupportedClass(docs, returns);\n    }\n  }\n  throw new Error(`Cannot find the class related to ${property[\"@id\"]}.`);\n}\n/**\n * Parses Hydra documentation and converts it to an intermediate representation.\n */\nexport default function parseHydraDocumentation(entrypointUrl) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  entrypointUrl = removeTrailingSlash(entrypointUrl);\n  return fetchEntrypointAndDocs(entrypointUrl, options).then(_ref => {\n    let {\n      entrypoint,\n      docs,\n      response\n    } = _ref;\n    const resources = [],\n      fields = [],\n      operations = [];\n    const title = get(docs, '[0][\"http://www.w3.org/ns/hydra/core#title\"][0][\"@value\"]', \"API Platform\");\n    const entrypointType = get(entrypoint, '[0][\"@type\"][0]');\n    if (!entrypointType) {\n      throw new Error('The API entrypoint has no \"@type\" key.');\n    }\n    const entrypointClass = findSupportedClass(docs, entrypointType);\n    if (!Array.isArray(entrypointClass[\"http://www.w3.org/ns/hydra/core#supportedProperty\"])) {\n      throw new Error('The entrypoint definition has no \"http://www.w3.org/ns/hydra/core#supportedProperty\" key or it is not an array.');\n    }\n    // Add resources\n    for (const properties of entrypointClass[\"http://www.w3.org/ns/hydra/core#supportedProperty\"]) {\n      const readableFields = [],\n        resourceFields = [],\n        writableFields = [],\n        resourceOperations = [];\n      const property = get(properties, '[\"http://www.w3.org/ns/hydra/core#property\"][0]');\n      if (!property) {\n        continue;\n      }\n      // Add fields\n      const relatedClass = findRelatedClass(docs, property);\n      for (const supportedProperties of relatedClass[\"http://www.w3.org/ns/hydra/core#supportedProperty\"]) {\n        const supportedProperty = get(supportedProperties, '[\"http://www.w3.org/ns/hydra/core#property\"][0]');\n        const id = supportedProperty[\"@id\"];\n        const range = get(supportedProperty, '[\"http://www.w3.org/2000/01/rdf-schema#range\"][0][\"@id\"]', null);\n        const field = new Field(supportedProperty[\"http://www.w3.org/2000/01/rdf-schema#label\"][0][\"@value\"], {\n          id,\n          range,\n          type: getType(id, range),\n          reference: \"http://www.w3.org/ns/hydra/core#Link\" === get(supportedProperty, '[\"@type\"][0]') ? range // Will be updated in a subsequent pass\n          : null,\n          embedded: \"http://www.w3.org/ns/hydra/core#Link\" !== get(supportedProperty, '[\"@type\"][0]') ? range // Will be updated in a subsequent pass\n          : null,\n          required: get(supportedProperties, '[\"http://www.w3.org/ns/hydra/core#required\"][0][\"@value\"]', false),\n          description: get(supportedProperties, '[\"http://www.w3.org/ns/hydra/core#description\"][0][\"@value\"]', \"\"),\n          maxCardinality: get(supportedProperty, '[\"http://www.w3.org/2002/07/owl#maxCardinality\"][0][\"@value\"]', null),\n          deprecated: get(supportedProperties, '[\"http://www.w3.org/2002/07/owl#deprecated\"][0][\"@value\"]', false)\n        });\n        fields.push(field);\n        resourceFields.push(field);\n        if (get(supportedProperties, '[\"http://www.w3.org/ns/hydra/core#readable\"][0][\"@value\"]')) {\n          readableFields.push(field);\n        }\n        if (get(supportedProperties, '[\"http://www.w3.org/ns/hydra/core#writeable\"][0][\"@value\"]') || get(supportedProperties, '[\"http://www.w3.org/ns/hydra/core#writable\"][0][\"@value\"]')) {\n          writableFields.push(field);\n        }\n      }\n      // parse entrypoint's operations (a.k.a. collection operations)\n      if (property[\"http://www.w3.org/ns/hydra/core#supportedOperation\"]) {\n        for (const entrypointOperation of property[\"http://www.w3.org/ns/hydra/core#supportedOperation\"]) {\n          if (!entrypointOperation[\"http://www.w3.org/ns/hydra/core#returns\"]) {\n            continue;\n          }\n          const range = entrypointOperation[\"http://www.w3.org/ns/hydra/core#returns\"][0][\"@id\"];\n          const method = entrypointOperation[\"http://www.w3.org/ns/hydra/core#method\"][0][\"@value\"];\n          let type = \"list\";\n          if (method === \"POST\") {\n            type = \"create\";\n          }\n          const operation = new Operation(entrypointOperation[\"http://www.w3.org/2000/01/rdf-schema#label\"][0][\"@value\"], type, {\n            method,\n            expects: entrypointOperation[\"http://www.w3.org/ns/hydra/core#expects\"] && entrypointOperation[\"http://www.w3.org/ns/hydra/core#expects\"][0][\"@id\"],\n            returns: range,\n            types: entrypointOperation[\"@type\"],\n            deprecated: get(entrypointOperation, '[\"http://www.w3.org/2002/07/owl#deprecated\"][0][\"@value\"]', false)\n          });\n          resourceOperations.push(operation);\n          operations.push(operation);\n        }\n      }\n      // parse resource operations (a.k.a. item operations)\n      for (const supportedOperation of relatedClass[\"http://www.w3.org/ns/hydra/core#supportedOperation\"] || []) {\n        if (!supportedOperation[\"http://www.w3.org/ns/hydra/core#returns\"]) {\n          continue;\n        }\n        const range = supportedOperation[\"http://www.w3.org/ns/hydra/core#returns\"][0][\"@id\"];\n        const method = supportedOperation[\"http://www.w3.org/ns/hydra/core#method\"][0][\"@value\"];\n        let type = \"show\";\n        if (method === \"POST\") {\n          type = \"create\";\n        }\n        if (method === \"PUT\" || method === \"PATCH\") {\n          type = \"edit\";\n        }\n        if (method === \"DELETE\") {\n          type = \"delete\";\n        }\n        const operation = new Operation(supportedOperation[\"http://www.w3.org/2000/01/rdf-schema#label\"][0][\"@value\"], type, {\n          method,\n          expects: supportedOperation[\"http://www.w3.org/ns/hydra/core#expects\"] && supportedOperation[\"http://www.w3.org/ns/hydra/core#expects\"][0][\"@id\"],\n          returns: range,\n          types: supportedOperation[\"@type\"],\n          deprecated: get(supportedOperation, '[\"http://www.w3.org/2002/07/owl#deprecated\"][0][\"@value\"]', false)\n        });\n        resourceOperations.push(operation);\n        operations.push(operation);\n      }\n      const url = get(entrypoint, `[0][\"${property[\"@id\"]}\"][0][\"@id\"]`);\n      if (!url) {\n        throw new Error(`Unable to find the URL for \"${property[\"@id\"]}\" in the entrypoint, make sure your API resource has at least one GET collection operation declared.`);\n      }\n      const resource = new Resource(guessNameFromUrl(url, entrypointUrl), url, {\n        id: relatedClass[\"@id\"],\n        title: get(relatedClass, '[\"http://www.w3.org/ns/hydra/core#title\"][0][\"@value\"]', \"\"),\n        fields: resourceFields,\n        readableFields,\n        writableFields,\n        operations: resourceOperations,\n        deprecated: get(relatedClass, '[\"http://www.w3.org/2002/07/owl#deprecated\"][0][\"@value\"]', false)\n      });\n      resource.parameters = [];\n      resource.getParameters = () => getParameters(resource, options);\n      resources.push(resource);\n    }\n    // Resolve references and embedded\n    for (const field of fields) {\n      if (null !== field.reference) {\n        field.reference = resources.find(resource => resource.id === field.reference) || null;\n      }\n      if (null !== field.embedded) {\n        field.embedded = resources.find(resource => resource.id === field.embedded) || null;\n      }\n    }\n    return {\n      api: new Api(entrypointUrl, {\n        title,\n        resources\n      }),\n      response,\n      status: response.status\n    };\n  }, data => Promise.reject({\n    api: new Api(entrypointUrl, {\n      resources: []\n    }),\n    error: data,\n    response: data.response,\n    status: get(data.response, \"status\")\n  }));\n}","map":{"version":3,"mappings":";AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,GAAG,QAAQ,WAAW;AAC/B,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,OAAO,MAAM,cAAc;AAWlC;;;AAGA,SAASC,gBAAgB,CAACC,GAAW,EAAEC,aAAqB;EAC1D,OAAOD,GAAG,CAACE,MAAM,CAACD,aAAa,CAACE,MAAM,GAAG,CAAC,CAAC;AAC7C;AAEA;;;AAGA,SAASC,kBAAkB,CACzBC,IAAmB,EACnBC,WAAmB;EAEnB,MAAMC,gBAAgB,GAAGhB,GAAG,CAC1Bc,IAAI,EACJ,uDAAuD,CACzB;EAChC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACF,gBAAgB,CAAC,EAAE;IACpC,MAAM,IAAIG,KAAK,CACb,iHAAiH,CAClH;;EAGH,KAAK,MAAMC,cAAc,IAAIJ,gBAAgB,EAAE;IAC7C,IAAII,cAAc,CAAC,KAAK,CAAC,KAAKL,WAAW,EAAE;MACzC,OAAOK,cAAc;;;EAIzB,MAAM,IAAID,KAAK,CACb,cAAcJ,WAAW,4CAA4C,CACtE;AACH;AAEA,OAAM,SAAUM,8BAA8B,CAACC,OAAgB;EAC7D,MAAMC,UAAU,GAAGD,OAAO,CAACtB,GAAG,CAAC,MAAM,CAAC;EACtC,IAAI,CAACuB,UAAU,EAAE;IACf,MAAM,IAAIJ,KAAK,CAAC,yCAAyC,CAAC;;EAG5D,MAAMK,OAAO,GACX,qEAAqE,CAACC,IAAI,CACxEF,UAAU,CACX;EACH,IAAIC,OAAO,KAAK,IAAI,EAAE;IACpB,MAAM,IAAIL,KAAK,CACb,+FAA+F,CAChG;;EAGH,OAAOK,OAAO,CAAC,CAAC,CAAC;AACnB;AAEA;;;AAGA,SAAeE,sBAAsB,CACnChB,aAAqB,EACY;EAAA,IAAjCiB,8EAA+B,EAAE;;IAQjC,MAAMC,CAAC,GAAG,MAAMvB,WAAW,CAACK,aAAa,EAAEiB,OAAO,CAAC;IACnD,IAAI,EAAE,MAAM,IAAIC,CAAC,CAAC,EAAE;MAClB,MAAM,IAAIT,KAAK,CAAC,wDAAwD,CAAC;;IAE3E,MAAMU,gBAAgB,GAAGD,CAAC,CAACE,IAAI;IAC/B,MAAMC,OAAO,GAAGV,8BAA8B,CAACO,CAAC,CAACI,QAAQ,CAACV,OAAO,CAAC;IAElE,MAAMW,cAAc,GAAIC,KAAa,IACnC7B,WAAW,CAAC6B,KAAK,EAAEP,OAAO,CAAC,CAACQ,IAAI,CAAEH,QAAQ,IAAI;MAC5C,IAAI,EAAE,MAAM,IAAIA,QAAQ,CAAC,EAAE;QACzB,MAAM,IAAIb,KAAK,CACb,8FAA8F,CAC/F;;MAEH,OAAOa,QAAQ;IACjB,CAAC,CAAC;IAEJ,MAAMI,YAAY,GAAG,MAAM/B,WAAW,CAAC0B,OAAO,EAAEJ,OAAO,CAAC;IACxD,IAAI,EAAE,MAAM,IAAIS,YAAY,CAAC,EAAE;MAC7B,MAAM,IAAIjB,KAAK,CACb,2DAA2D,CAC5D;;IAEH,MAAMkB,UAAU,GAAGD,YAAY,CAACN,IAAI;IAEpC,MAAM,CAAChB,IAAI,EAAEwB,UAAU,CAAC,GAAI,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC5CzC,MAAM,CAAC0C,MAAM,CAACJ,UAAU,EAAE;MACxBK,IAAI,EAAEX,OAAO;MACbE;KACD,CAAC,EACFlC,MAAM,CAAC0C,MAAM,CAACZ,gBAAgB,EAAE;MAC9Ba,IAAI,EAAEhC,aAAa;MACnBuB;KACD,CAAC,CACH,CAA8C;IAE/C,OAAO;MACLvB,aAAa;MACbqB,OAAO;MACPO,UAAU;MACVN,QAAQ,EAAEJ,CAAC,CAACI,QAAQ;MACpBlB;KACD;EACH,CAAC;;AAED,SAAS6B,mBAAmB,CAAClC,GAAW;EACtC,IAAIA,GAAG,CAACmC,QAAQ,CAAC,GAAG,CAAC,EAAE;IACrBnC,GAAG,GAAGA,GAAG,CAACoC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;EAGxB,OAAOpC,GAAG;AACZ;AAEA,SAASqC,gBAAgB,CACvBhC,IAAmB,EACnBiC,QAA6B;EAE7B;EACA,IAAI9B,KAAK,CAACC,OAAO,CAAC6B,QAAQ,CAAC,4CAA4C,CAAC,CAAC,EAAE;IACzE,KAAK,MAAMC,KAAK,IAAID,QAAQ,CAC1B,4CAA4C,CAC7C,EAAE;MACD,MAAME,UAAU,GAAGjD,GAAG,CACpBgD,KAAK,EACL,4GAA4G,CACnG;MACX,MAAME,aAAa,GAAGlD,GAAG,CACvBgD,KAAK,EACL,+GAA+G,CACtG;MAEX,IACEE,aAAa,IACb,wCAAwC,KAAKD,UAAU,EACvD;QACA,OAAOpC,kBAAkB,CAACC,IAAI,EAAEoC,aAAa,CAAC;;;;EAKpD;EACA,KAAK,MAAMC,4BAA4B,IAAIJ,QAAQ,CACjD,oDAAoD,CACrD,IAAI,EAAE,EAAE;IACP,IACE,CAACI,4BAA4B,CAAC,yCAAyC,CAAC,EACxE;MACA;;IAGF,MAAMC,OAAO,GAAGpD,GAAG,CACjBmD,4BAA4B,EAC5B,uDAAuD,CAClC;IACvB,IACE,QAAQ,KAAK,OAAOC,OAAO,IAC3B,CAAC,KAAKA,OAAO,CAACC,OAAO,CAAC,iCAAiC,CAAC,EACxD;MACA,OAAOxC,kBAAkB,CAACC,IAAI,EAAEsC,OAAO,CAAC;;;EAI5C,MAAM,IAAIjC,KAAK,CAAC,oCAAoC4B,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;AACzE;AAEA;;;AAGA,eAAc,SAAUO,uBAAuB,CAC7C5C,aAAqB,EACY;EAAA,IAAjCiB,8EAA+B,EAAE;EAMjCjB,aAAa,GAAGiC,mBAAmB,CAACjC,aAAa,CAAC;EAElD,OAAOgB,sBAAsB,CAAChB,aAAa,EAAEiB,OAAO,CAAC,CAACQ,IAAI,CACxD,QAAmC;IAAA,IAAlC;MAAEG,UAAU;MAAExB,IAAI;MAAEkB;IAAQ,CAAE;IAC7B,MAAMuB,SAAS,GAAG,EAAE;MAClBC,MAAM,GAAG,EAAE;MACXC,UAAU,GAAG,EAAE;IACjB,MAAMC,KAAK,GAAG1D,GAAG,CACfc,IAAI,EACJ,2DAA2D,EAC3D,cAAc,CACL;IAEX,MAAM6C,cAAc,GAAG3D,GAAG,CAACsC,UAAU,EAAE,iBAAiB,CAE3C;IACb,IAAI,CAACqB,cAAc,EAAE;MACnB,MAAM,IAAIxC,KAAK,CAAC,wCAAwC,CAAC;;IAG3D,MAAMyC,eAAe,GAAG/C,kBAAkB,CAACC,IAAI,EAAE6C,cAAc,CAAC;IAChE,IACE,CAAC1C,KAAK,CAACC,OAAO,CACZ0C,eAAe,CAAC,mDAAmD,CAAC,CACrE,EACD;MACA,MAAM,IAAIzC,KAAK,CACb,iHAAiH,CAClH;;IAGH;IACA,KAAK,MAAM0C,UAAU,IAAID,eAAe,CACtC,mDAAmD,CACpD,EAAE;MACD,MAAME,cAAc,GAAG,EAAE;QACvBC,cAAc,GAAG,EAAE;QACnBC,cAAc,GAAG,EAAE;QACnBC,kBAAkB,GAAG,EAAE;MAEzB,MAAMlB,QAAQ,GAAG/C,GAAG,CAClB6D,UAAU,EACV,iDAAiD,CACf;MACpC,IAAI,CAACd,QAAQ,EAAE;QACb;;MAGF;MACA,MAAMmB,YAAY,GAAGpB,gBAAgB,CAAChC,IAAI,EAAEiC,QAAQ,CAAC;MACrD,KAAK,MAAMoB,mBAAmB,IAAID,YAAY,CAC5C,mDAAmD,CACpD,EAAE;QACD,MAAME,iBAAiB,GAAGpE,GAAG,CAC3BmE,mBAAmB,EACnB,iDAAiD,CAC3B;QACxB,MAAME,EAAE,GAAGD,iBAAiB,CAAC,KAAK,CAAC;QACnC,MAAMpB,KAAK,GAAGhD,GAAG,CACfoE,iBAAiB,EACjB,0DAA0D,EAC1D,IAAI,CACK;QAEX,MAAME,KAAK,GAAG,IAAIpE,KAAK,CACrBkE,iBAAiB,CAAC,4CAA4C,CAAC,CAAC,CAAC,CAAC,CAChE,QAAQ,CACT,EACD;UACEC,EAAE;UACFrB,KAAK;UACLuB,IAAI,EAAEhE,OAAO,CAAC8D,EAAE,EAAErB,KAAK,CAAC;UACxBwB,SAAS,EACP,sCAAsC,KACtCxE,GAAG,CAACoE,iBAAiB,EAAE,cAAc,CAAC,GAClCpB,KAAK,CAAC;UAAA,EACN,IAAI;UACVyB,QAAQ,EACN,sCAAsC,KACtCzE,GAAG,CAACoE,iBAAiB,EAAE,cAAc,CAAC,GACjCpB,KAA6B,CAAC;UAAA,EAC/B,IAAI;UACV0B,QAAQ,EAAE1E,GAAG,CACXmE,mBAAmB,EACnB,2DAA2D,EAC3D,KAAK,CACK;UACZQ,WAAW,EAAE3E,GAAG,CACdmE,mBAAmB,EACnB,8DAA8D,EAC9D,EAAE,CACO;UACXS,cAAc,EAAE5E,GAAG,CACjBoE,iBAAiB,EACjB,+DAA+D,EAC/D,IAAI,CACY;UAClBS,UAAU,EAAE7E,GAAG,CACbmE,mBAAmB,EACnB,2DAA2D,EAC3D,KAAK;SAER,CACF;QAEDX,MAAM,CAACsB,IAAI,CAACR,KAAK,CAAC;QAClBP,cAAc,CAACe,IAAI,CAACR,KAAK,CAAC;QAE1B,IACEtE,GAAG,CACDmE,mBAAmB,EACnB,2DAA2D,CAC5D,EACD;UACAL,cAAc,CAACgB,IAAI,CAACR,KAAK,CAAC;;QAG5B,IACEtE,GAAG,CACDmE,mBAAmB,EACnB,4DAA4D,CAC7D,IACDnE,GAAG,CACDmE,mBAAmB,EACnB,2DAA2D,CAC5D,EACD;UACAH,cAAc,CAACc,IAAI,CAACR,KAAK,CAAC;;;MAI9B;MACA,IAAIvB,QAAQ,CAAC,oDAAoD,CAAC,EAAE;QAClE,KAAK,MAAMgC,mBAAmB,IAAIhC,QAAQ,CACxC,oDAAoD,CACrD,EAAE;UACD,IACE,CAACgC,mBAAmB,CAAC,yCAAyC,CAAC,EAC/D;YACA;;UAGF,MAAM/B,KAAK,GACT+B,mBAAmB,CAAC,yCAAyC,CAAC,CAAC,CAAC,CAAC,CAC/D,KAAK,CACN;UACH,MAAMC,MAAM,GACVD,mBAAmB,CAAC,wCAAwC,CAAC,CAAC,CAAC,CAAC,CAC9D,QAAQ,CACT;UACH,IAAIR,IAAI,GAAkB,MAAM;UAChC,IAAIS,MAAM,KAAK,MAAM,EAAE;YACrBT,IAAI,GAAG,QAAQ;;UAEjB,MAAMU,SAAS,GAAG,IAAI7E,SAAS,CAC7B2E,mBAAmB,CACjB,4CAA4C,CAC7C,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EACdR,IAAI,EACJ;YACES,MAAM;YACNE,OAAO,EACLH,mBAAmB,CACjB,yCAAyC,CAC1C,IACDA,mBAAmB,CACjB,yCAAyC,CAC1C,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACb3B,OAAO,EAAEJ,KAAK;YACdmC,KAAK,EAAEJ,mBAAmB,CAAC,OAAO,CAAC;YACnCF,UAAU,EAAE7E,GAAG,CACb+E,mBAAmB,EACnB,2DAA2D,EAC3D,KAAK;WAER,CACF;UAEDd,kBAAkB,CAACa,IAAI,CAACG,SAAS,CAAC;UAClCxB,UAAU,CAACqB,IAAI,CAACG,SAAS,CAAC;;;MAI9B;MACA,KAAK,MAAMG,kBAAkB,IAAIlB,YAAY,CAC3C,oDAAoD,CACrD,IAAI,EAAE,EAAE;QACP,IAAI,CAACkB,kBAAkB,CAAC,yCAAyC,CAAC,EAAE;UAClE;;QAGF,MAAMpC,KAAK,GACToC,kBAAkB,CAAC,yCAAyC,CAAC,CAAC,CAAC,CAAC,CAC9D,KAAK,CACN;QACH,MAAMJ,MAAM,GACVI,kBAAkB,CAAC,wCAAwC,CAAC,CAAC,CAAC,CAAC,CAC7D,QAAQ,CACT;QACH,IAAIb,IAAI,GAAkB,MAAM;QAChC,IAAIS,MAAM,KAAK,MAAM,EAAE;UACrBT,IAAI,GAAG,QAAQ;;QAEjB,IAAIS,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAK,OAAO,EAAE;UAC1CT,IAAI,GAAG,MAAM;;QAEf,IAAIS,MAAM,KAAK,QAAQ,EAAE;UACvBT,IAAI,GAAG,QAAQ;;QAEjB,MAAMU,SAAS,GAAG,IAAI7E,SAAS,CAC7BgF,kBAAkB,CAAC,4CAA4C,CAAC,CAAC,CAAC,CAAC,CACjE,QAAQ,CACT,EACDb,IAAI,EACJ;UACES,MAAM;UACNE,OAAO,EACLE,kBAAkB,CAAC,yCAAyC,CAAC,IAC7DA,kBAAkB,CAChB,yCAAyC,CAC1C,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;UACbhC,OAAO,EAAEJ,KAAK;UACdmC,KAAK,EAAEC,kBAAkB,CAAC,OAAO,CAAC;UAClCP,UAAU,EAAE7E,GAAG,CACboF,kBAAkB,EAClB,2DAA2D,EAC3D,KAAK;SAER,CACF;QAEDnB,kBAAkB,CAACa,IAAI,CAACG,SAAS,CAAC;QAClCxB,UAAU,CAACqB,IAAI,CAACG,SAAS,CAAC;;MAG5B,MAAMxE,GAAG,GAAGT,GAAG,CAACsC,UAAU,EAAE,QAAQS,QAAQ,CAAC,KAAK,CAAC,cAAc,CAEpD;MACb,IAAI,CAACtC,GAAG,EAAE;QACR,MAAM,IAAIU,KAAK,CACb,+BAA+B4B,QAAQ,CAAC,KAAK,CAAC,sGAAsG,CACrJ;;MAGH,MAAMsC,QAAQ,GAAG,IAAIlF,QAAQ,CAC3BK,gBAAgB,CAACC,GAAG,EAAEC,aAAa,CAAC,EACpCD,GAAG,EACH;QACE4D,EAAE,EAAEH,YAAY,CAAC,KAAK,CAAC;QACvBR,KAAK,EAAE1D,GAAG,CACRkE,YAAY,EACZ,wDAAwD,EACxD,EAAE,CACO;QACXV,MAAM,EAAEO,cAAc;QACtBD,cAAc;QACdE,cAAc;QACdP,UAAU,EAAEQ,kBAAkB;QAC9BY,UAAU,EAAE7E,GAAG,CACbkE,YAAY,EACZ,2DAA2D,EAC3D,KAAK;OAER,CACF;MAEDmB,QAAQ,CAACC,UAAU,GAAG,EAAE;MACxBD,QAAQ,CAAC/E,aAAa,GAAG,MACvBA,aAAa,CAAC+E,QAAQ,EAAE1D,OAAO,CAAC;MAElC4B,SAAS,CAACuB,IAAI,CAACO,QAAQ,CAAC;;IAG1B;IACA,KAAK,MAAMf,KAAK,IAAId,MAAM,EAAE;MAC1B,IAAI,IAAI,KAAKc,KAAK,CAACE,SAAS,EAAE;QAC5BF,KAAK,CAACE,SAAS,GACbjB,SAAS,CAACgC,IAAI,CAAEF,QAAQ,IAAKA,QAAQ,CAAChB,EAAE,KAAKC,KAAK,CAACE,SAAS,CAAC,IAC7D,IAAI;;MAER,IAAI,IAAI,KAAKF,KAAK,CAACG,QAAQ,EAAE;QAC3BH,KAAK,CAACG,QAAQ,GACZlB,SAAS,CAACgC,IAAI,CAAEF,QAAQ,IAAKA,QAAQ,CAAChB,EAAE,KAAKC,KAAK,CAACG,QAAQ,CAAC,IAC5D,IAAI;;;IAIV,OAAO;MACLe,GAAG,EAAE,IAAIvF,GAAG,CAACS,aAAa,EAAE;QAAEgD,KAAK;QAAEH;MAAS,CAAE,CAAC;MACjDvB,QAAQ;MACRyD,MAAM,EAAEzD,QAAQ,CAACyD;KAClB;EACH,CAAC,EACAC,IAA4B,IAC3BnD,OAAO,CAACoD,MAAM,CAAC;IACbH,GAAG,EAAE,IAAIvF,GAAG,CAACS,aAAa,EAAE;MAAE6C,SAAS,EAAE;IAAE,CAAE,CAAC;IAC9CqC,KAAK,EAAEF,IAAI;IACX1D,QAAQ,EAAE0D,IAAI,CAAC1D,QAAQ;IACvByD,MAAM,EAAEzF,GAAG,CAAC0F,IAAI,CAAC1D,QAAQ,EAAE,QAAQ;GACpC,CAAC,CACL;AACH","names":["jsonld","get","Api","Field","Resource","Operation","fetchJsonLd","getParameters","getType","guessNameFromUrl","url","entrypointUrl","substr","length","findSupportedClass","docs","classToFind","supportedClasses","Array","isArray","Error","supportedClass","getDocumentationUrlFromHeaders","headers","linkHeader","matches","exec","fetchEntrypointAndDocs","options","d","entrypointJsonLd","body","docsUrl","response","documentLoader","input","then","docsResponse","docsJsonLd","entrypoint","Promise","all","expand","base","removeTrailingSlash","endsWith","slice","findRelatedClass","property","range","onProperty","allValuesFrom","entrypointSupportedOperation","returns","indexOf","parseHydraDocumentation","resources","fields","operations","title","entrypointType","entrypointClass","properties","readableFields","resourceFields","writableFields","resourceOperations","relatedClass","supportedProperties","supportedProperty","id","field","type","reference","embedded","required","description","maxCardinality","deprecated","push","entrypointOperation","method","operation","expects","types","supportedOperation","resource","parameters","find","api","status","data","reject","error"],"sources":["C:\\Users\\kevin\\Desktop\\EGS data\\Egs-Ladder-Front\\EGS-ladder-front\\node_modules\\@api-platform\\api-doc-parser\\src\\hydra\\parseHydraDocumentation.ts"],"sourcesContent":["import jsonld from \"jsonld\";\nimport get from \"lodash.get\";\nimport { Api } from \"../Api.js\";\nimport { Field } from \"../Field.js\";\nimport { Resource } from \"../Resource.js\";\nimport { Operation } from \"../Operation.js\";\nimport fetchJsonLd from \"./fetchJsonLd.js\";\nimport getParameters from \"./getParameters.js\";\nimport getType from \"./getType.js\";\nimport type { OperationType } from \"../Operation.js\";\nimport type { Parameter } from \"../Parameter.js\";\nimport type {\n  ExpandedClass,\n  ExpandedDoc,\n  Entrypoint,\n  ExpandedRdfProperty,\n  RequestInitExtended,\n} from \"./types.js\";\n\n/**\n * Extracts the short name of a resource.\n */\nfunction guessNameFromUrl(url: string, entrypointUrl: string): string {\n  return url.substr(entrypointUrl.length + 1);\n}\n\n/**\n * Finds the description of the class with the given id.\n */\nfunction findSupportedClass(\n  docs: ExpandedDoc[],\n  classToFind: string\n): ExpandedClass {\n  const supportedClasses = get(\n    docs,\n    '[0][\"http://www.w3.org/ns/hydra/core#supportedClass\"]'\n  ) as ExpandedClass[] | undefined;\n  if (!Array.isArray(supportedClasses)) {\n    throw new Error(\n      'The API documentation has no \"http://www.w3.org/ns/hydra/core#supportedClass\" key or its value is not an array.'\n    );\n  }\n\n  for (const supportedClass of supportedClasses) {\n    if (supportedClass[\"@id\"] === classToFind) {\n      return supportedClass;\n    }\n  }\n\n  throw new Error(\n    `The class \"${classToFind}\" is not defined in the API documentation.`\n  );\n}\n\nexport function getDocumentationUrlFromHeaders(headers: Headers): string {\n  const linkHeader = headers.get(\"Link\");\n  if (!linkHeader) {\n    throw new Error('The response has no \"Link\" HTTP header.');\n  }\n\n  const matches =\n    /<(.+)>; rel=\"http:\\/\\/www.w3.org\\/ns\\/hydra\\/core#apiDocumentation\"/.exec(\n      linkHeader\n    );\n  if (matches === null) {\n    throw new Error(\n      'The \"Link\" HTTP header is not of the type \"http://www.w3.org/ns/hydra/core#apiDocumentation\".'\n    );\n  }\n\n  return matches[1];\n}\n\n/**\n * Retrieves Hydra's entrypoint and API docs.\n */\nasync function fetchEntrypointAndDocs(\n  entrypointUrl: string,\n  options: RequestInitExtended = {}\n): Promise<{\n  entrypointUrl: string;\n  docsUrl: string;\n  response: Response;\n  entrypoint: Entrypoint[];\n  docs: ExpandedDoc[];\n}> {\n  const d = await fetchJsonLd(entrypointUrl, options);\n  if (!(\"body\" in d)) {\n    throw new Error(\"An empty response was received for the entrypoint URL.\");\n  }\n  const entrypointJsonLd = d.body;\n  const docsUrl = getDocumentationUrlFromHeaders(d.response.headers);\n\n  const documentLoader = (input: string) =>\n    fetchJsonLd(input, options).then((response) => {\n      if (!(\"body\" in response)) {\n        throw new Error(\n          \"An empty response was received when expanding documentation or entrypoint JSON-LD documents.\"\n        );\n      }\n      return response;\n    });\n\n  const docsResponse = await fetchJsonLd(docsUrl, options);\n  if (!(\"body\" in docsResponse)) {\n    throw new Error(\n      \"An empty response was received for the documentation URL.\"\n    );\n  }\n  const docsJsonLd = docsResponse.body;\n\n  const [docs, entrypoint] = (await Promise.all([\n    jsonld.expand(docsJsonLd, {\n      base: docsUrl,\n      documentLoader,\n    }),\n    jsonld.expand(entrypointJsonLd, {\n      base: entrypointUrl,\n      documentLoader,\n    }),\n  ])) as unknown as [ExpandedDoc[], Entrypoint[]];\n\n  return {\n    entrypointUrl,\n    docsUrl,\n    entrypoint,\n    response: d.response,\n    docs,\n  };\n}\n\nfunction removeTrailingSlash(url: string): string {\n  if (url.endsWith(\"/\")) {\n    url = url.slice(0, -1);\n  }\n\n  return url;\n}\n\nfunction findRelatedClass(\n  docs: ExpandedDoc[],\n  property: ExpandedRdfProperty\n): ExpandedClass {\n  // Use the entrypoint property's owl:equivalentClass if available\n  if (Array.isArray(property[\"http://www.w3.org/2000/01/rdf-schema#range\"])) {\n    for (const range of property[\n      \"http://www.w3.org/2000/01/rdf-schema#range\"\n    ]) {\n      const onProperty = get(\n        range,\n        '[\"http://www.w3.org/2002/07/owl#equivalentClass\"][0][\"http://www.w3.org/2002/07/owl#onProperty\"][0][\"@id\"]'\n      ) as string;\n      const allValuesFrom = get(\n        range,\n        '[\"http://www.w3.org/2002/07/owl#equivalentClass\"][0][\"http://www.w3.org/2002/07/owl#allValuesFrom\"][0][\"@id\"]'\n      ) as string;\n\n      if (\n        allValuesFrom &&\n        \"http://www.w3.org/ns/hydra/core#member\" === onProperty\n      ) {\n        return findSupportedClass(docs, allValuesFrom);\n      }\n    }\n  }\n\n  // As a fallback, find an operation available on the property of the entrypoint returning the searched type (usually POST)\n  for (const entrypointSupportedOperation of property[\n    \"http://www.w3.org/ns/hydra/core#supportedOperation\"\n  ] || []) {\n    if (\n      !entrypointSupportedOperation[\"http://www.w3.org/ns/hydra/core#returns\"]\n    ) {\n      continue;\n    }\n\n    const returns = get(\n      entrypointSupportedOperation,\n      '[\"http://www.w3.org/ns/hydra/core#returns\"][0][\"@id\"]'\n    ) as string | undefined;\n    if (\n      \"string\" === typeof returns &&\n      0 !== returns.indexOf(\"http://www.w3.org/ns/hydra/core\")\n    ) {\n      return findSupportedClass(docs, returns);\n    }\n  }\n\n  throw new Error(`Cannot find the class related to ${property[\"@id\"]}.`);\n}\n\n/**\n * Parses Hydra documentation and converts it to an intermediate representation.\n */\nexport default function parseHydraDocumentation(\n  entrypointUrl: string,\n  options: RequestInitExtended = {}\n): Promise<{\n  api: Api;\n  response: Response;\n  status: number;\n}> {\n  entrypointUrl = removeTrailingSlash(entrypointUrl);\n\n  return fetchEntrypointAndDocs(entrypointUrl, options).then(\n    ({ entrypoint, docs, response }) => {\n      const resources = [],\n        fields = [],\n        operations = [];\n      const title = get(\n        docs,\n        '[0][\"http://www.w3.org/ns/hydra/core#title\"][0][\"@value\"]',\n        \"API Platform\"\n      ) as string;\n\n      const entrypointType = get(entrypoint, '[0][\"@type\"][0]') as\n        | string\n        | undefined;\n      if (!entrypointType) {\n        throw new Error('The API entrypoint has no \"@type\" key.');\n      }\n\n      const entrypointClass = findSupportedClass(docs, entrypointType);\n      if (\n        !Array.isArray(\n          entrypointClass[\"http://www.w3.org/ns/hydra/core#supportedProperty\"]\n        )\n      ) {\n        throw new Error(\n          'The entrypoint definition has no \"http://www.w3.org/ns/hydra/core#supportedProperty\" key or it is not an array.'\n        );\n      }\n\n      // Add resources\n      for (const properties of entrypointClass[\n        \"http://www.w3.org/ns/hydra/core#supportedProperty\"\n      ]) {\n        const readableFields = [],\n          resourceFields = [],\n          writableFields = [],\n          resourceOperations = [];\n\n        const property = get(\n          properties,\n          '[\"http://www.w3.org/ns/hydra/core#property\"][0]'\n        ) as ExpandedRdfProperty | undefined;\n        if (!property) {\n          continue;\n        }\n\n        // Add fields\n        const relatedClass = findRelatedClass(docs, property);\n        for (const supportedProperties of relatedClass[\n          \"http://www.w3.org/ns/hydra/core#supportedProperty\"\n        ]) {\n          const supportedProperty = get(\n            supportedProperties,\n            '[\"http://www.w3.org/ns/hydra/core#property\"][0]'\n          ) as ExpandedRdfProperty;\n          const id = supportedProperty[\"@id\"];\n          const range = get(\n            supportedProperty,\n            '[\"http://www.w3.org/2000/01/rdf-schema#range\"][0][\"@id\"]',\n            null\n          ) as string;\n\n          const field = new Field(\n            supportedProperty[\"http://www.w3.org/2000/01/rdf-schema#label\"][0][\n              \"@value\"\n            ],\n            {\n              id,\n              range,\n              type: getType(id, range),\n              reference:\n                \"http://www.w3.org/ns/hydra/core#Link\" ===\n                get(supportedProperty, '[\"@type\"][0]')\n                  ? range // Will be updated in a subsequent pass\n                  : null,\n              embedded:\n                \"http://www.w3.org/ns/hydra/core#Link\" !==\n                get(supportedProperty, '[\"@type\"][0]')\n                  ? (range as unknown as Resource) // Will be updated in a subsequent pass\n                  : null,\n              required: get(\n                supportedProperties,\n                '[\"http://www.w3.org/ns/hydra/core#required\"][0][\"@value\"]',\n                false\n              ) as boolean,\n              description: get(\n                supportedProperties,\n                '[\"http://www.w3.org/ns/hydra/core#description\"][0][\"@value\"]',\n                \"\"\n              ) as string,\n              maxCardinality: get(\n                supportedProperty,\n                '[\"http://www.w3.org/2002/07/owl#maxCardinality\"][0][\"@value\"]',\n                null\n              ) as number | null,\n              deprecated: get(\n                supportedProperties,\n                '[\"http://www.w3.org/2002/07/owl#deprecated\"][0][\"@value\"]',\n                false\n              ) as boolean,\n            }\n          );\n\n          fields.push(field);\n          resourceFields.push(field);\n\n          if (\n            get(\n              supportedProperties,\n              '[\"http://www.w3.org/ns/hydra/core#readable\"][0][\"@value\"]'\n            )\n          ) {\n            readableFields.push(field);\n          }\n\n          if (\n            get(\n              supportedProperties,\n              '[\"http://www.w3.org/ns/hydra/core#writeable\"][0][\"@value\"]'\n            ) ||\n            get(\n              supportedProperties,\n              '[\"http://www.w3.org/ns/hydra/core#writable\"][0][\"@value\"]'\n            )\n          ) {\n            writableFields.push(field);\n          }\n        }\n\n        // parse entrypoint's operations (a.k.a. collection operations)\n        if (property[\"http://www.w3.org/ns/hydra/core#supportedOperation\"]) {\n          for (const entrypointOperation of property[\n            \"http://www.w3.org/ns/hydra/core#supportedOperation\"\n          ]) {\n            if (\n              !entrypointOperation[\"http://www.w3.org/ns/hydra/core#returns\"]\n            ) {\n              continue;\n            }\n\n            const range =\n              entrypointOperation[\"http://www.w3.org/ns/hydra/core#returns\"][0][\n                \"@id\"\n              ];\n            const method =\n              entrypointOperation[\"http://www.w3.org/ns/hydra/core#method\"][0][\n                \"@value\"\n              ];\n            let type: OperationType = \"list\";\n            if (method === \"POST\") {\n              type = \"create\";\n            }\n            const operation = new Operation(\n              entrypointOperation[\n                \"http://www.w3.org/2000/01/rdf-schema#label\"\n              ][0][\"@value\"],\n              type,\n              {\n                method,\n                expects:\n                  entrypointOperation[\n                    \"http://www.w3.org/ns/hydra/core#expects\"\n                  ] &&\n                  entrypointOperation[\n                    \"http://www.w3.org/ns/hydra/core#expects\"\n                  ][0][\"@id\"],\n                returns: range,\n                types: entrypointOperation[\"@type\"],\n                deprecated: get(\n                  entrypointOperation,\n                  '[\"http://www.w3.org/2002/07/owl#deprecated\"][0][\"@value\"]',\n                  false\n                ) as boolean,\n              }\n            );\n\n            resourceOperations.push(operation);\n            operations.push(operation);\n          }\n        }\n\n        // parse resource operations (a.k.a. item operations)\n        for (const supportedOperation of relatedClass[\n          \"http://www.w3.org/ns/hydra/core#supportedOperation\"\n        ] || []) {\n          if (!supportedOperation[\"http://www.w3.org/ns/hydra/core#returns\"]) {\n            continue;\n          }\n\n          const range =\n            supportedOperation[\"http://www.w3.org/ns/hydra/core#returns\"][0][\n              \"@id\"\n            ];\n          const method =\n            supportedOperation[\"http://www.w3.org/ns/hydra/core#method\"][0][\n              \"@value\"\n            ];\n          let type: OperationType = \"show\";\n          if (method === \"POST\") {\n            type = \"create\";\n          }\n          if (method === \"PUT\" || method === \"PATCH\") {\n            type = \"edit\";\n          }\n          if (method === \"DELETE\") {\n            type = \"delete\";\n          }\n          const operation = new Operation(\n            supportedOperation[\"http://www.w3.org/2000/01/rdf-schema#label\"][0][\n              \"@value\"\n            ],\n            type,\n            {\n              method,\n              expects:\n                supportedOperation[\"http://www.w3.org/ns/hydra/core#expects\"] &&\n                supportedOperation[\n                  \"http://www.w3.org/ns/hydra/core#expects\"\n                ][0][\"@id\"],\n              returns: range,\n              types: supportedOperation[\"@type\"],\n              deprecated: get(\n                supportedOperation,\n                '[\"http://www.w3.org/2002/07/owl#deprecated\"][0][\"@value\"]',\n                false\n              ) as boolean,\n            }\n          );\n\n          resourceOperations.push(operation);\n          operations.push(operation);\n        }\n\n        const url = get(entrypoint, `[0][\"${property[\"@id\"]}\"][0][\"@id\"]`) as\n          | string\n          | undefined;\n        if (!url) {\n          throw new Error(\n            `Unable to find the URL for \"${property[\"@id\"]}\" in the entrypoint, make sure your API resource has at least one GET collection operation declared.`\n          );\n        }\n\n        const resource = new Resource(\n          guessNameFromUrl(url, entrypointUrl),\n          url,\n          {\n            id: relatedClass[\"@id\"],\n            title: get(\n              relatedClass,\n              '[\"http://www.w3.org/ns/hydra/core#title\"][0][\"@value\"]',\n              \"\"\n            ) as string,\n            fields: resourceFields,\n            readableFields,\n            writableFields,\n            operations: resourceOperations,\n            deprecated: get(\n              relatedClass,\n              '[\"http://www.w3.org/2002/07/owl#deprecated\"][0][\"@value\"]',\n              false\n            ) as boolean,\n          }\n        );\n\n        resource.parameters = [];\n        resource.getParameters = (): Promise<Parameter[]> =>\n          getParameters(resource, options);\n\n        resources.push(resource);\n      }\n\n      // Resolve references and embedded\n      for (const field of fields) {\n        if (null !== field.reference) {\n          field.reference =\n            resources.find((resource) => resource.id === field.reference) ||\n            null;\n        }\n        if (null !== field.embedded) {\n          field.embedded =\n            resources.find((resource) => resource.id === field.embedded) ||\n            null;\n        }\n      }\n\n      return {\n        api: new Api(entrypointUrl, { title, resources }),\n        response,\n        status: response.status,\n      };\n    },\n    (data: { response: Response }) =>\n      Promise.reject({\n        api: new Api(entrypointUrl, { resources: [] }),\n        error: data,\n        response: data.response,\n        status: get(data.response, \"status\"),\n      })\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Parameter } from \"../Parameter.js\";\nimport fetchResource from \"./fetchResource.js\";\nexport default (function (resource) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return fetchResource(resource.url, options).then(_ref => {\n    let {\n      parameters = []\n    } = _ref;\n    const resourceParameters = [];\n    parameters.forEach(_ref2 => {\n      let {\n        property = null,\n        required,\n        variable\n      } = _ref2;\n      if (null === property) {\n        return;\n      }\n      const {\n        range = null\n      } = resource.fields ? resource.fields.find(_ref3 => {\n        let {\n          name\n        } = _ref3;\n        return property === name;\n      }) || {} : {};\n      resourceParameters.push(new Parameter(variable, range, required, \"\"));\n    });\n    resource.parameters = resourceParameters;\n    return resourceParameters;\n  });\n});","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,aAAa,MAAM,oBAAoB;AAI9C,gBAAe,UACbC,QAAkB;EAAA,IAClBC,8EAA+B,EAAE;EAAA,OAEjCF,aAAa,CAACC,QAAQ,CAACE,GAAG,EAAED,OAAO,CAAC,CAACE,IAAI,CAAC,QAAwB;IAAA,IAAvB;MAAEC,UAAU,GAAG;IAAE,CAAE;IAC5D,MAAMC,kBAAkB,GAAgB,EAAE;IAC1CD,UAAU,CAACE,OAAO,CAAC,SAA4C;MAAA,IAA3C;QAAEC,QAAQ,GAAG,IAAI;QAAEC,QAAQ;QAAEC;MAAQ,CAAE;MACzD,IAAI,IAAI,KAAKF,QAAQ,EAAE;QACrB;;MAGF,MAAM;QAAEG,KAAK,GAAG;MAAI,CAAE,GAAGV,QAAQ,CAACW,MAAM,GACpCX,QAAQ,CAACW,MAAM,CAACC,IAAI,CAAC;QAAA,IAAC;UAAEC;QAAI,CAAE;QAAA,OAAKN,QAAQ,KAAKM,IAAI;MAAA,EAAC,IAAI,EAAE,GAC3D,EAAE;MAENR,kBAAkB,CAACS,IAAI,CAAC,IAAIhB,SAAS,CAACW,QAAQ,EAAEC,KAAK,EAAEF,QAAQ,EAAE,EAAE,CAAC,CAAC;IACvE,CAAC,CAAC;IACFR,QAAQ,CAACI,UAAU,GAAGC,kBAAkB;IAExC,OAAOA,kBAAkB;EAC3B,CAAC,CAAC;AAAA","names":["Parameter","fetchResource","resource","options","url","then","parameters","resourceParameters","forEach","property","required","variable","range","fields","find","name","push"],"sources":["C:\\Users\\kevin\\Desktop\\EGS data\\Egs-Ladder-Front\\EGS-ladder-front\\node_modules\\@api-platform\\api-doc-parser\\src\\hydra\\getParameters.ts"],"sourcesContent":["import { Parameter } from \"../Parameter.js\";\nimport fetchResource from \"./fetchResource.js\";\nimport type { Resource } from \"../Resource.js\";\nimport type { RequestInitExtended } from \"./types.js\";\n\nexport default (\n  resource: Resource,\n  options: RequestInitExtended = {}\n): Promise<Parameter[]> =>\n  fetchResource(resource.url, options).then(({ parameters = [] }) => {\n    const resourceParameters: Parameter[] = [];\n    parameters.forEach(({ property = null, required, variable }) => {\n      if (null === property) {\n        return;\n      }\n\n      const { range = null } = resource.fields\n        ? resource.fields.find(({ name }) => property === name) || {}\n        : {};\n\n      resourceParameters.push(new Parameter(variable, range, required, \"\"));\n    });\n    resource.parameters = resourceParameters;\n\n    return resourceParameters;\n  });\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
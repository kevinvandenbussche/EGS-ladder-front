{"ast":null,"code":"import { RebaserError } from './errors.js';\n/**\n * Rebase JSON $refs properties (only) as specified by the rebase function.\n * It modifies the passed object.\n *\n * @param {string} id - id of the JSON (e.g., name of the schema in case of a JSON schema)\n * @param {*} obj - the JSON object\n * @param {Function} rebaser - the function which changes refs values as required by the specific application\n * @throws error - in case of error rebasing the object\n * @returns {*} a copy of the passed JSON object with rebased $refs, in case of success.\n */\nexport function rebase(id, obj, rebaser) {\n  // visited objects properties registry\n  const parsedProps = [];\n  try {\n    (function findAndRebase(obj) {\n      for (const key of Object.keys(obj)) {\n        if (key === '$ref') {\n          if (rebaser) {\n            rebaser(id, obj);\n          }\n        }\n        const prop = obj[key];\n        if (prop && typeof prop === 'object') {\n          if (!Array.isArray(prop)) {\n            if (!parsedProps.find(p => p === prop)) {\n              parsedProps.push(prop);\n              findAndRebase(prop);\n            }\n          } else {\n            // the property value is an array\n            for (let i = 0; i < prop.length; i++) {\n              findAndRebase(prop[i]);\n            }\n          }\n        }\n      }\n    })(obj);\n  } catch (error) {\n    throw new RebaserError('rebase', 'error', [error]);\n  }\n  return obj;\n}","map":{"version":3,"names":["RebaserError","rebase","id","obj","rebaser","parsedProps","findAndRebase","key","Object","keys","prop","Array","isArray","find","p","push","i","length","error"],"sources":["C:/Users/kevin/Desktop/EGS data/Egs-Ladder-Front/EGS-ladder-front/node_modules/jsonref/dist/rebase.js"],"sourcesContent":["import { RebaserError } from './errors.js';\n/**\n * Rebase JSON $refs properties (only) as specified by the rebase function.\n * It modifies the passed object.\n *\n * @param {string} id - id of the JSON (e.g., name of the schema in case of a JSON schema)\n * @param {*} obj - the JSON object\n * @param {Function} rebaser - the function which changes refs values as required by the specific application\n * @throws error - in case of error rebasing the object\n * @returns {*} a copy of the passed JSON object with rebased $refs, in case of success.\n */\nexport function rebase(id, obj, rebaser) {\n    // visited objects properties registry\n    const parsedProps = [];\n    try {\n        (function findAndRebase(obj) {\n            for (const key of Object.keys(obj)) {\n                if (key === '$ref') {\n                    if (rebaser) {\n                        rebaser(id, obj);\n                    }\n                }\n                const prop = obj[key];\n                if (prop && typeof prop === 'object') {\n                    if (!Array.isArray(prop)) {\n                        if (!parsedProps.find((p) => p === prop)) {\n                            parsedProps.push(prop);\n                            findAndRebase(prop);\n                        }\n                    }\n                    else {\n                        // the property value is an array\n                        for (let i = 0; i < prop.length; i++) {\n                            findAndRebase(prop[i]);\n                        }\n                    }\n                }\n            }\n        })(obj);\n    }\n    catch (error) {\n        throw new RebaserError('rebase', 'error', [error]);\n    }\n    return obj;\n}\n//# sourceMappingURL=rebase.js.map"],"mappings":"AAAA,SAASA,YAAY,QAAQ,aAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAM,CAACC,EAAE,EAAEC,GAAG,EAAEC,OAAO,EAAE;EACrC;EACA,MAAMC,WAAW,GAAG,EAAE;EACtB,IAAI;IACA,CAAC,SAASC,aAAa,CAACH,GAAG,EAAE;MACzB,KAAK,MAAMI,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACN,GAAG,CAAC,EAAE;QAChC,IAAII,GAAG,KAAK,MAAM,EAAE;UAChB,IAAIH,OAAO,EAAE;YACTA,OAAO,CAACF,EAAE,EAAEC,GAAG,CAAC;UACpB;QACJ;QACA,MAAMO,IAAI,GAAGP,GAAG,CAACI,GAAG,CAAC;QACrB,IAAIG,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;UAClC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;YACtB,IAAI,CAACL,WAAW,CAACQ,IAAI,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,IAAI,CAAC,EAAE;cACtCL,WAAW,CAACU,IAAI,CAACL,IAAI,CAAC;cACtBJ,aAAa,CAACI,IAAI,CAAC;YACvB;UACJ,CAAC,MACI;YACD;YACA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,IAAI,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;cAClCV,aAAa,CAACI,IAAI,CAACM,CAAC,CAAC,CAAC;YAC1B;UACJ;QACJ;MACJ;IACJ,CAAC,EAAEb,GAAG,CAAC;EACX,CAAC,CACD,OAAOe,KAAK,EAAE;IACV,MAAM,IAAIlB,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,CAACkB,KAAK,CAAC,CAAC;EACtD;EACA,OAAOf,GAAG;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}
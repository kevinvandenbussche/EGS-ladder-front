{"ast":null,"code":"import { escape } from './utils.js';\nconst __meta = Symbol();\nexport const LII_RE = /^[a-zA-Z][a-zA-Z0-9\\.\\-_:]*$/; // Location-independent identifier, JSON Schema draft 7, par. 8.2.3\nexport function normalizeUri(input, scope) {\n  const uri = new URL(input, scope);\n  const out = uri.toString();\n  return out + (!uri.hash && out[out.length - 1] !== '#' ? '#' : '');\n}\nexport function isRef(obj) {\n  return obj !== null && typeof obj === 'object' && typeof obj.$ref === 'string';\n}\nexport function isAnnotated(obj) {\n  return obj !== null && typeof obj === 'object' && typeof obj[__meta] === 'object';\n}\nexport function isDerefd(obj) {\n  return isAnnotated(obj) && obj[__meta].derefd === true;\n}\nexport function getMeta(obj) {\n  if (!isAnnotated(obj)) {\n    throw new Error('Not annotated');\n  }\n  return obj[__meta];\n}\nexport function getKey(obj) {\n  const parent = getMeta(obj).parent;\n  if (typeof parent === 'undefined') {\n    return undefined;\n  } else if (Array.isArray(parent)) {\n    for (let i = 0; i < parent.length; i++) {\n      if (parent[i] === obj) {\n        return i;\n      }\n    }\n    return undefined;\n  } else {\n    return Object.keys(parent).find(k => parent[k] === obj);\n  }\n}\nexport function getById(obj, id) {\n  if (obj === null || typeof obj !== 'object') {\n    throw new TypeError('Invalid object');\n  }\n  const meta = getMeta(obj);\n  return meta.registry[normalizeUri(id, meta.scope)];\n}\nexport function annotate(obj, options) {\n  if (obj === null || typeof obj !== 'object') {\n    throw new TypeError('Invalid object');\n  } else if (isAnnotated(obj)) {\n    throw new Error('Already annotated');\n  }\n  obj[__meta] = {\n    registry: options.registry || {},\n    refs: options.refs || new Set(),\n    root: obj\n  };\n  obj[__meta].registry[normalizeUri(options.scope)] = obj;\n  return function _annotate(obj, scope) {\n    if (isRef(obj)) {\n      const uri = new URL(obj.$ref, scope);\n      uri.hash = '';\n      getMeta(obj).refs.add(uri.toString() + '#');\n      obj[__meta].scope = normalizeUri(scope);\n    } else {\n      if (typeof obj.$id === 'string') {\n        if (!obj.$id || obj.$id === '#') {\n          throw new SyntaxError(`Invalid identifier ${obj.$id}`);\n        }\n        const id = new URL(obj.$id, scope);\n        if (id.hash && !id.hash.substr(1).match(LII_RE)) {\n          throw new SyntaxError(`Invalid identifier ${obj.$id}`);\n        }\n        obj[__meta].scope = normalizeUri(obj.$id, scope);\n        obj[__meta].registry[obj[__meta].scope] = obj;\n        obj[__meta].root = obj;\n      } else {\n        obj[__meta].scope = normalizeUri(scope);\n      }\n      const keys = Object.keys(obj);\n      for (let key of keys) {\n        const next = obj[key];\n        if (next !== null && typeof next === 'object' && !isAnnotated(next)) {\n          const meta = getMeta(obj);\n          next[__meta] = {\n            registry: meta.registry,\n            refs: meta.refs,\n            parent: obj,\n            root: meta.root\n          };\n          _annotate(next, `${meta.scope}/${escape(key)}`);\n        }\n      }\n    }\n    return obj;\n  }(obj, options.scope);\n}\nexport function missingRefs(obj) {\n  const meta = getMeta(obj);\n  const known = new Set(Object.keys(meta.registry));\n  return [...meta.refs].filter(r => !known.has(r));\n}\nexport function normalize(obj) {\n  if (!isAnnotated(obj)) {\n    throw new Error('Not annotated');\n  }\n  const meta = getMeta(obj);\n  if (typeof obj.$id === 'string') {\n    obj.$id = normalizeUri(obj.$id, meta.scope);\n  }\n  const keys = Object.keys(obj);\n  for (let key of keys) {\n    const o = obj[key];\n    if (o !== null && typeof o === 'object') {\n      if (isRef(o)) {\n        o.$ref = normalizeUri(o.$ref, meta.scope);\n      } else {\n        normalize(o);\n      }\n    }\n  }\n  return obj;\n}","map":{"version":3,"names":["escape","__meta","Symbol","LII_RE","normalizeUri","input","scope","uri","URL","out","toString","hash","length","isRef","obj","$ref","isAnnotated","isDerefd","derefd","getMeta","Error","getKey","parent","undefined","Array","isArray","i","Object","keys","find","k","getById","id","TypeError","meta","registry","annotate","options","refs","Set","root","_annotate","add","$id","SyntaxError","substr","match","key","next","missingRefs","known","filter","r","has","normalize","o"],"sources":["C:/Users/kevin/Desktop/EGS data/Egs-Ladder-Front/EGS-ladder-front/node_modules/jsonref/dist/meta.js"],"sourcesContent":["import { escape } from './utils.js';\nconst __meta = Symbol();\nexport const LII_RE = /^[a-zA-Z][a-zA-Z0-9\\.\\-_:]*$/; // Location-independent identifier, JSON Schema draft 7, par. 8.2.3\nexport function normalizeUri(input, scope) {\n    const uri = new URL(input, scope);\n    const out = uri.toString();\n    return out + (!uri.hash && out[out.length - 1] !== '#' ? '#' : '');\n}\nexport function isRef(obj) {\n    return obj !== null && typeof obj === 'object' && typeof obj.$ref === 'string';\n}\nexport function isAnnotated(obj) {\n    return obj !== null && typeof obj === 'object' && typeof obj[__meta] === 'object';\n}\nexport function isDerefd(obj) {\n    return isAnnotated(obj) && obj[__meta].derefd === true;\n}\nexport function getMeta(obj) {\n    if (!isAnnotated(obj)) {\n        throw new Error('Not annotated');\n    }\n    return obj[__meta];\n}\nexport function getKey(obj) {\n    const parent = getMeta(obj).parent;\n    if (typeof parent === 'undefined') {\n        return undefined;\n    }\n    else if (Array.isArray(parent)) {\n        for (let i = 0; i < parent.length; i++) {\n            if (parent[i] === obj) {\n                return i;\n            }\n        }\n        return undefined;\n    }\n    else {\n        return Object.keys(parent).find((k) => parent[k] === obj);\n    }\n}\nexport function getById(obj, id) {\n    if (obj === null || typeof obj !== 'object') {\n        throw new TypeError('Invalid object');\n    }\n    const meta = getMeta(obj);\n    return meta.registry[normalizeUri(id, meta.scope)];\n}\nexport function annotate(obj, options) {\n    if (obj === null || typeof obj !== 'object') {\n        throw new TypeError('Invalid object');\n    }\n    else if (isAnnotated(obj)) {\n        throw new Error('Already annotated');\n    }\n    obj[__meta] = {\n        registry: options.registry || {},\n        refs: options.refs || new Set(),\n        root: obj,\n    };\n    obj[__meta].registry[normalizeUri(options.scope)] = obj;\n    return (function _annotate(obj, scope) {\n        if (isRef(obj)) {\n            const uri = new URL(obj.$ref, scope);\n            uri.hash = '';\n            getMeta(obj).refs.add(uri.toString() + '#');\n            obj[__meta].scope = normalizeUri(scope);\n        }\n        else {\n            if (typeof obj.$id === 'string') {\n                if (!obj.$id || obj.$id === '#') {\n                    throw new SyntaxError(`Invalid identifier ${obj.$id}`);\n                }\n                const id = new URL(obj.$id, scope);\n                if (id.hash && !id.hash.substr(1).match(LII_RE)) {\n                    throw new SyntaxError(`Invalid identifier ${obj.$id}`);\n                }\n                obj[__meta].scope = normalizeUri(obj.$id, scope);\n                obj[__meta].registry[obj[__meta].scope] = obj;\n                obj[__meta].root = obj;\n            }\n            else {\n                obj[__meta].scope = normalizeUri(scope);\n            }\n            const keys = Object.keys(obj);\n            for (let key of keys) {\n                const next = obj[key];\n                if (next !== null && typeof next === 'object' && !isAnnotated(next)) {\n                    const meta = getMeta(obj);\n                    next[__meta] = {\n                        registry: meta.registry,\n                        refs: meta.refs,\n                        parent: obj,\n                        root: meta.root,\n                    };\n                    _annotate(next, `${meta.scope}/${escape(key)}`);\n                }\n            }\n        }\n        return obj;\n    })(obj, options.scope);\n}\nexport function missingRefs(obj) {\n    const meta = getMeta(obj);\n    const known = new Set(Object.keys(meta.registry));\n    return [...meta.refs].filter((r) => !known.has(r));\n}\nexport function normalize(obj) {\n    if (!isAnnotated(obj)) {\n        throw new Error('Not annotated');\n    }\n    const meta = getMeta(obj);\n    if (typeof obj.$id === 'string') {\n        obj.$id = normalizeUri(obj.$id, meta.scope);\n    }\n    const keys = Object.keys(obj);\n    for (let key of keys) {\n        const o = obj[key];\n        if (o !== null && typeof o === 'object') {\n            if (isRef(o)) {\n                o.$ref = normalizeUri(o.$ref, meta.scope);\n            }\n            else {\n                normalize(o);\n            }\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=meta.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ParserError, RetrieverError } from './errors.js';\nimport * as meta from './meta.js';\nimport { resolve as refResolver } from './ref.js';\nexport * from './errors.js';\nexport { getMeta, isAnnotated, isRef, normalize, normalizeUri } from './meta.js';\nexport * from './patch.js';\nexport { resolve as pointer } from './pointer.js';\nexport * from './rebase.js';\nexport function scope(data) {\n  if (meta.isAnnotated(data)) {\n    return meta.getMeta(data).scope;\n  }\n}\nexport async function parse(dataOrUri, opts) {\n  let obj;\n  if (!opts || !opts.scope) {\n    throw new Error('No scope');\n  }\n  if (typeof dataOrUri === 'string') {\n    if (!opts.retriever) {\n      throw new Error('No retriever');\n    }\n    const uri = new URL(dataOrUri).toString();\n    obj = await opts.retriever(uri);\n    if (!opts.registry) {\n      opts.registry = {};\n    }\n    if (uri !== opts.scope) {\n      opts.registry[meta.normalizeUri(uri)] = obj;\n    }\n  } else if (dataOrUri === null || typeof dataOrUri !== 'object') {\n    throw new TypeError('Bad data');\n  } else {\n    obj = dataOrUri;\n  }\n  if (meta.isAnnotated(obj)) {\n    return obj;\n  } else {\n    meta.annotate(obj, opts);\n    if (meta.getMeta(obj).refs.size > 0) {\n      const missingRefs = meta.missingRefs(obj);\n      if (missingRefs.length) {\n        if (!opts.retriever) {\n          throw new Error('No retriever');\n        }\n        const registry = meta.getMeta(obj).registry;\n        const errors = [];\n        for (let r of missingRefs) {\n          try {\n            registry[r] = await opts.retriever(r);\n          } catch (e) {\n            errors.push(new RetrieverError(r, e));\n          }\n        }\n        if (errors.length) {\n          throw new ParserError(meta.getMeta(obj).scope, 'retriever', errors);\n        }\n      }\n      return refResolver(obj, opts);\n    } else {\n      return obj;\n    }\n  }\n}","map":{"version":3,"names":["ParserError","RetrieverError","meta","resolve","refResolver","getMeta","isAnnotated","isRef","normalize","normalizeUri","pointer","scope","data","parse","dataOrUri","opts","obj","Error","retriever","uri","URL","toString","registry","TypeError","annotate","refs","size","missingRefs","length","errors","r","e","push"],"sources":["C:/Users/kevin/Desktop/EGS data/Egs-Ladder-Front/EGS-ladder-front/node_modules/jsonref/dist/index.js"],"sourcesContent":["import { ParserError, RetrieverError } from './errors.js';\nimport * as meta from './meta.js';\nimport { resolve as refResolver } from './ref.js';\nexport * from './errors.js';\nexport { getMeta, isAnnotated, isRef, normalize, normalizeUri } from './meta.js';\nexport * from './patch.js';\nexport { resolve as pointer } from './pointer.js';\nexport * from './rebase.js';\nexport function scope(data) {\n    if (meta.isAnnotated(data)) {\n        return meta.getMeta(data).scope;\n    }\n}\nexport async function parse(dataOrUri, opts) {\n    let obj;\n    if (!opts || !opts.scope) {\n        throw new Error('No scope');\n    }\n    if (typeof dataOrUri === 'string') {\n        if (!opts.retriever) {\n            throw new Error('No retriever');\n        }\n        const uri = new URL(dataOrUri).toString();\n        obj = await opts.retriever(uri);\n        if (!opts.registry) {\n            opts.registry = {};\n        }\n        if (uri !== opts.scope) {\n            opts.registry[meta.normalizeUri(uri)] = obj;\n        }\n    }\n    else if (dataOrUri === null || typeof dataOrUri !== 'object') {\n        throw new TypeError('Bad data');\n    }\n    else {\n        obj = dataOrUri;\n    }\n    if (meta.isAnnotated(obj)) {\n        return obj;\n    }\n    else {\n        meta.annotate(obj, opts);\n        if (meta.getMeta(obj).refs.size > 0) {\n            const missingRefs = meta.missingRefs(obj);\n            if (missingRefs.length) {\n                if (!opts.retriever) {\n                    throw new Error('No retriever');\n                }\n                const registry = meta.getMeta(obj).registry;\n                const errors = [];\n                for (let r of missingRefs) {\n                    try {\n                        registry[r] = await opts.retriever(r);\n                    }\n                    catch (e) {\n                        errors.push(new RetrieverError(r, e));\n                    }\n                }\n                if (errors.length) {\n                    throw new ParserError(meta.getMeta(obj).scope, 'retriever', errors);\n                }\n            }\n            return refResolver(obj, opts);\n        }\n        else {\n            return obj;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
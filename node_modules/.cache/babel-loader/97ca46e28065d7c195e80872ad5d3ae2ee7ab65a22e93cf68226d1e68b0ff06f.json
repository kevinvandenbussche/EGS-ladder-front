{"ast":null,"code":"import inflection from \"inflection\";\nconst getType = (openApiType, format) => {\n  if (format) {\n    switch (format) {\n      case \"int32\":\n      case \"int64\":\n        return \"integer\";\n      default:\n        return inflection.camelize(format.replace(\"-\", \"_\"), true);\n    }\n  }\n  return openApiType;\n};\nexport default getType;","map":{"version":3,"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AAGnC,MAAMC,OAAO,GAAG,CAACC,WAAmB,EAAEC,MAAe,KAAe;EAClE,IAAIA,MAAM,EAAE;IACV,QAAQA,MAAM;MACZ,KAAK,OAAO;MACZ,KAAK,OAAO;QACV,OAAO,SAAS;MAClB;QACE,OAAOH,UAAU,CAACI,QAAQ,CAACD,MAAM,CAACE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC;IAAC;;EAIjE,OAAOH,WAAW;AACpB,CAAC;AAED,eAAeD,OAAO","names":["inflection","getType","openApiType","format","camelize","replace"],"sources":["C:\\Users\\kevin\\Desktop\\EGS data\\Egs-Ladder-Front\\EGS-ladder-front\\node_modules\\@api-platform\\api-doc-parser\\src\\openapi3\\getType.ts"],"sourcesContent":["import inflection from \"inflection\";\nimport type { FieldType } from \"../Field.js\";\n\nconst getType = (openApiType: string, format?: string): FieldType => {\n  if (format) {\n    switch (format) {\n      case \"int32\":\n      case \"int64\":\n        return \"integer\";\n      default:\n        return inflection.camelize(format.replace(\"-\", \"_\"), true);\n    }\n  }\n\n  return openApiType;\n};\n\nexport default getType;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}